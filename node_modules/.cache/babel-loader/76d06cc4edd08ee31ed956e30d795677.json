{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart(_ref) {\n  _s();\n\n  let {\n    cart\n  } = _ref;\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    let count = 0;\n    cart.forEach(item => {\n      count = count + item.qty;\n    });\n    setCartCount(count);\n  }, [cart, cartCount]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cartCount\n  }, void 0, false);\n}\n\n_s(Cart, \"EQi356tNuj/HpIxvM69lIiPlHRY=\");\n\n_c = Cart;\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.shop.cart\n  };\n};\n\nexport default connect(mapStateToProps)(Cart);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/FSD_GIT/OrganicWalley/fsd_app/src/components/Cart.js"],"names":["useEffect","useState","connect","Cart","cart","cartCount","setCartCount","count","forEach","item","qty","mapStateToProps","state","shop"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AACA,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,KAAK,GAAG,CAAZ;AACAH,IAAAA,IAAI,CAACI,OAAL,CAAaC,IAAI,IAAI;AACjBF,MAAAA,KAAK,GAAGA,KAAK,GAAGE,IAAI,CAACC,GAArB;AACH,KAFD;AAGAJ,IAAAA,YAAY,CAACC,KAAD,CAAZ;AACH,GANQ,EAMN,CAACH,IAAD,EAAOC,SAAP,CANM,CAAT;AAOA,sBACI;AAAA,cAAGA;AAAH,mBADJ;AAGH;;GAbQF,I;;KAAAA,I;;AAcT,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,IAAI,EAAEQ,KAAK,CAACC,IAAN,CAAWT;AADd,GAAP;AAGH,CAJD;;AAKA,eAAeF,OAAO,CAACS,eAAD,CAAP,CAAyBR,IAAzB,CAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nfunction Cart({ cart }) {\r\n    const [cartCount, setCartCount] = useState(0)\r\n\r\n    useEffect(() => {\r\n        let count = 0\r\n        cart.forEach(item => {\r\n            count = count + item.qty;\r\n        });\r\n        setCartCount(count)\r\n    }, [cart, cartCount])\r\n    return (\r\n        <>{cartCount}</>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.shop.cart\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Cart)\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}