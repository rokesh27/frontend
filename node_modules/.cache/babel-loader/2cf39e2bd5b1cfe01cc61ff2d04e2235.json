{"ast":null,"code":"import ProductData0 from '../../assets/products.json';\nimport * as actionTypes from './actionTypes'; // import ProductData from './ProductData'\n// import axios from \"axios\"\n// import { useState,useEffect } from 'react'\n// import { getAllProducts } from '../../utils/api'\n// let ProductDataI =[]\n// let cc = ProductData()\n// async functioncode = () => {\n//     console.log(\"Jii\")\n//     let ProductData=[]\n// await fetch('http://localhost:9000/api/products/').then(resp => \n//     resp.json())\n//     .then( data => {ProductData = data.data\n//         console.log(ProductData)})\n//   console.log(\"Hello1\")\n// let fruitInfo=[]\n// let vegetableInfo=[]\n// let pulsesInfo=[]\n// let dairyInfo =[]\n// for (let index = 0; index < ProductData.length; index++) {\n// const element = ProductData[index];\n// switch (element.type) {\n//     case \"Fruit\":\n//         fruitInfo[fruitInfo.length]=element\n//         break;\n//     case \"Vegetable\":\n//         vegetableInfo[vegetableInfo.length]=element\n//         break;\n//     case \"Pulses\":\n//         pulsesInfo[pulsesInfo.length]=element\n//         break;\n//     case \"dairy\":\n//         dairyInfo[dairyInfo.length]=element\n//         break;        \n// }};\n// return [fruitInfo, vegetableInfo, dairyInfo, pulsesInfo]\n// }\n// const g = code()\n// const Initialstate = {\n//     fruits:g[0],\n//     vegetables: g[1],\n//     dairy: g[2],\n//     pulses: g[3],\n//     cart: [],\n//     sellerProducts: [],\n//     orders: [],\n// }\n\nlet ProductData = ProductData0.products;\nlet fruitInfo = [];\nlet vegetableInfo = [];\nlet pulsesInfo = [];\nlet dairyInfo = [];\n\nfor (let index = 0; index < ProductData.length; index++) {\n  const element = ProductData[index];\n\n  switch (element.type) {\n    case \"Fruit\":\n      fruitInfo[fruitInfo.length] = element;\n      break;\n\n    case \"Vegetable\":\n      vegetableInfo[vegetableInfo.length] = element;\n      break;\n\n    case \"Pulses\":\n      pulsesInfo[pulsesInfo.length] = element;\n      break;\n\n    case \"dairy\":\n      dairyInfo[dairyInfo.length] = element;\n      break;\n  }\n}\n\n;\nconst Initialstate = {\n  fruits: fruitInfo,\n  vegetables: vegetableInfo,\n  pulses: pulsesInfo,\n  dairy: dairyInfo,\n  cart: [],\n  sellerProducts: [],\n  orders: []\n};\n\nconst CartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Initialstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const I1 = state.fruits;\n      const I2 = state.dairy;\n      const I3 = state.pulses;\n      const I4 = state.vegetables;\n      const temp = I1.concat(I2);\n      const temp2 = temp.concat(I3);\n      const full = temp2.concat(I4);\n      const item = full.find(c => c.id === action.payload.idV);\n      const inCart = state.cart.find(item => item.id === action.payload.idV ? true : false);\n      return { ...state,\n        cart: inCart ? state.cart.map(item => item.id === action.payload.idV ? { ...item,\n          qty: item.qty + 1\n        } : item) : [...state.cart, { ...item,\n          qty: 1,\n          userInfo: action.payload.userInfo\n        }]\n      };\n\n    case actionTypes.REM_CART:\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.idV)\n      };\n\n    case actionTypes.ADD_QTY:\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload.idV ? { ...item,\n          qty: item.qty + 1\n        } : item)\n      };\n\n    case actionTypes.SUB_QTY:\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload.idV ? { ...item,\n          qty: item.qty - 1\n        } : item)\n      };\n\n    case actionTypes.ADD_TO_ORDER:\n      const I11 = state.fruits;\n      const I22 = state.dairy;\n      const I33 = state.pulses;\n      const I44 = state.vegetables;\n      const temp11 = I11.concat(I22);\n      const temp22 = temp11.concat(I33);\n      const full11 = temp22.concat(I44);\n      const itemxx = full11.find(c => c.id === action.payload.idV);\n      return { ...state,\n        orders: { ...itemxx,\n          userInfo: action.payload.userInfo\n        }\n      };\n\n    case actionTypes.transfer:\n      return { ...state,\n        orders: action.payload.cart\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/FSD_GIT/OrganicWalley/fsd_app/src/components/cart/CartReducer.js"],"names":["ProductData0","actionTypes","ProductData","products","fruitInfo","vegetableInfo","pulsesInfo","dairyInfo","index","length","element","type","Initialstate","fruits","vegetables","pulses","dairy","cart","sellerProducts","orders","CartReducer","state","action","ADD_TO_CART","I1","I2","I3","I4","temp","concat","temp2","full","item","find","c","id","payload","idV","inCart","map","qty","userInfo","REM_CART","filter","ADD_QTY","SUB_QTY","ADD_TO_ORDER","I11","I22","I33","I44","temp11","temp22","full11","itemxx","transfer"],"mappings":"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","sourcesContent":["import ProductData0 from '../../assets/products.json'\r\nimport * as actionTypes from './actionTypes'\r\n\r\n// import ProductData from './ProductData'\r\n// import axios from \"axios\"\r\n// import { useState,useEffect } from 'react'\r\n// import { getAllProducts } from '../../utils/api'\r\n// let ProductDataI =[]\r\n// let cc = ProductData()\r\n// async functioncode = () => {\r\n//     console.log(\"Jii\")\r\n//     let ProductData=[]\r\n// await fetch('http://localhost:9000/api/products/').then(resp => \r\n//     resp.json())\r\n//     .then( data => {ProductData = data.data\r\n//         console.log(ProductData)})\r\n//   console.log(\"Hello1\")\r\n// let fruitInfo=[]\r\n// let vegetableInfo=[]\r\n// let pulsesInfo=[]\r\n// let dairyInfo =[]\r\n\r\n// for (let index = 0; index < ProductData.length; index++) {\r\n// const element = ProductData[index];\r\n// switch (element.type) {\r\n//     case \"Fruit\":\r\n//         fruitInfo[fruitInfo.length]=element\r\n//         break;\r\n//     case \"Vegetable\":\r\n//         vegetableInfo[vegetableInfo.length]=element\r\n//         break;\r\n//     case \"Pulses\":\r\n//         pulsesInfo[pulsesInfo.length]=element\r\n//         break;\r\n//     case \"dairy\":\r\n//         dairyInfo[dairyInfo.length]=element\r\n//         break;        \r\n// }};\r\n// return [fruitInfo, vegetableInfo, dairyInfo, pulsesInfo]\r\n// }\r\n\r\n// const g = code()\r\n// const Initialstate = {\r\n//     fruits:g[0],\r\n//     vegetables: g[1],\r\n//     dairy: g[2],\r\n//     pulses: g[3],\r\n//     cart: [],\r\n//     sellerProducts: [],\r\n//     orders: [],\r\n// }\r\n\r\n\r\nlet ProductData = ProductData0.products;\r\n\r\nlet fruitInfo=[]\r\nlet vegetableInfo=[]\r\nlet pulsesInfo=[]\r\nlet dairyInfo =[]\r\n\r\nfor (let index = 0; index < ProductData.length; index++) {\r\nconst element = ProductData[index];\r\nswitch (element.type) {\r\n    case \"Fruit\":\r\n        fruitInfo[fruitInfo.length]=element\r\n        break;\r\n    case \"Vegetable\":\r\n        vegetableInfo[vegetableInfo.length]=element\r\n        break;\r\n    case \"Pulses\":\r\n        pulsesInfo[pulsesInfo.length]=element\r\n        break;\r\n    case \"dairy\":\r\n        dairyInfo[dairyInfo.length]=element\r\n        break;        \r\n}};\r\n\r\nconst Initialstate = {\r\n        fruits:fruitInfo,\r\n        vegetables:vegetableInfo,\r\n        pulses:pulsesInfo,\r\n        dairy : dairyInfo,\r\n        cart: [],\r\n        sellerProducts: [],\r\n        orders: [],\r\n    }\r\n\r\n\r\nconst CartReducer = (state=Initialstate,action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n\r\n            const I1 = state.fruits;\r\n            const I2 = state.dairy;\r\n            const I3 = state.pulses;\r\n            const I4 = state.vegetables;\r\n            const temp = I1.concat(I2)\r\n            const temp2 = temp.concat(I3)\r\n            const full = temp2.concat(I4)\r\n            const item = full.find((c) => c.id === action.payload.idV)\r\n            const inCart = state.cart.find((item) => item.id === action.payload.idV ? true : false);\r\n            return {\r\n                ...state,\r\n                cart: inCart ? state.cart.map((item) => item.id === action.payload.idV ? { ...item, qty: item.qty + 1 } : item) :\r\n                    [...state.cart, { ...item, qty: 1, userInfo: action.payload.userInfo }],\r\n            }\r\n        case actionTypes.REM_CART:\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter((item) => item.id !== action.payload.idV)\r\n            }\r\n        case actionTypes.ADD_QTY:\r\n            return {\r\n                ...state,\r\n                cart: state.cart.map((item) => item.id === action.payload.idV ? { ...item, qty: item.qty + 1 } : item)\r\n            }\r\n        case actionTypes.SUB_QTY:\r\n            return {\r\n                ...state,\r\n                cart: state.cart.map((item) => item.id === action.payload.idV ? { ...item, qty: item.qty - 1 } : item)\r\n            }\r\n        case actionTypes.ADD_TO_ORDER:\r\n            const I11 = state.fruits;\r\n            const I22 = state.dairy;\r\n            const I33 = state.pulses;\r\n            const I44 = state.vegetables;\r\n            const temp11 = I11.concat(I22)\r\n            const temp22 = temp11.concat(I33)\r\n            const full11 = temp22.concat(I44)\r\n            const itemxx = full11.find((c) => c.id === action.payload.idV)\r\n            return {\r\n                ...state,\r\n                orders: { ...itemxx, userInfo: action.payload.userInfo }\r\n            }\r\n        case actionTypes.transfer:\r\n            return {\r\n                ...state,\r\n                orders: action.payload.cart\r\n            }\r\n        default: return state\r\n\r\n    }\r\n}\r\nexport default CartReducer"]},"metadata":{},"sourceType":"module"}