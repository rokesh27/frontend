{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\FSD_GIT\\\\OrganicWalley\\\\fsd_app\\\\src\\\\search\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./SearchBar.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Link } from \"react-router-dom\";\nimport { findByName } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar(_ref) {\n  _s();\n\n  let {\n    placeholder,\n    data\n  } = _ref;\n  const [filteredData, setFilteredData] = useState([]);\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const HandleFilter = async event => {\n    const searchWord = event.target.value;\n    setWordEntered(searchWord);\n    console.log(searchWord);\n    const newFilter = await findByName(searchWord);\n    setFilteredData(newFilter.data); // Promise.resolve(\n    //     findByName(searchWord).then((res)=>res.data).then(\n    //         (i)=>{\n    //             console.log(i)\n    //             console.log(\"hiii\")\n    //             setFilteredData(i.data)\n    //         }\n    //     )\n    // )\n\n    if (searchWord === \"\") {\n      setFilteredData([]);\n    } else {\n      setFilteredData(filteredData);\n    }\n  };\n\n  const clearInput = () => {\n    setFilteredData([]);\n    setWordEntered(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchInputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"colorchange\",\n        value: wordEntered,\n        onChange: HandleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchIcon\",\n        children: filteredData.length === 0 ? /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CloseIcon, {\n          id: \"clearBtn\",\n          onClick: clearInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), filteredData.length != 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataResult\",\n      children: filteredData.slice(0, 15).map((value, key) => {\n        return (\n          /*#__PURE__*/\n\n          /*<a className=\"dataItem\" href={value.link} target=\"_blank\">\r\n            <p>{value.Full_name} </p>\r\n          </a>*/\n          _jsxDEV(Link, {\n            className: \"dataItem\",\n            to: {\n              pathname: \"/Products\",\n              state: {\n                product: value\n              }\n            },\n            children: value.Full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"33ofi4ptmyQ7yvQ8YqRETBCPbkQ=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/FSD_GIT/OrganicWalley/fsd_app/src/search/SearchBar.js"],"names":["React","useState","useEffect","SearchIcon","CloseIcon","Link","findByName","SearchBar","placeholder","data","filteredData","setFilteredData","wordEntered","setWordEntered","HandleFilter","event","searchWord","target","value","console","log","newFilter","clearInput","length","slice","map","key","pathname","state","product","Full_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AACA,SAASC,SAAT,OAA0C;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAuB;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMa,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC,UAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAhC;AACAL,IAAAA,cAAc,CAACG,UAAD,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEA,UAAMK,SAAS,GAAG,MAAMf,UAAU,CAACU,UAAD,CAAlC;AACAL,IAAAA,eAAe,CAACU,SAAS,CAACZ,IAAX,CAAf,CANoC,CAOlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF,QAAIO,UAAU,KAAK,EAAnB,EAAuB;AACrBL,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD,KAFD,MAEO;AACLA,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD;AACF,GAvBD;;AAyBA,QAAMY,UAAU,GAAG,MAAM;AACvBX,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AACc,QAAA,SAAS,EAAC,aADxB;AAEE,QAAA,KAAK,EAAED,WAFT;AAGE,QAAA,QAAQ,EAAEE;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACGJ,YAAY,CAACa,MAAb,KAAwB,CAAxB,gBACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,UAAd;AAAyB,UAAA,OAAO,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeGZ,YAAY,CAACa,MAAb,IAAuB,CAAvB,iBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGb,YAAY,CAACc,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,EAA0BC,GAA1B,CAA8B,CAACP,KAAD,EAAQQ,GAAR,KAAgB;AAC7C;AAAA;;AACE;AACd;AACA;AACc,kBAAC,IAAD;AAAM,YAAA,SAAS,EAAC,UAAhB;AAA2B,YAAA,EAAE,EAAE;AAC7BC,cAAAA,QAAQ,EAAE,WADmB;AAE7BC,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,OAAO,EAACX;AAAV;AAFsB,aAA/B;AAAA,sBAGIA,KAAK,CAACY;AAHV;AAAA;AAAA;AAAA;AAAA;AAJF;AASD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAnEQvB,S;;KAAAA,S;AAqET,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { findByName } from \"../utils/api\";\r\nfunction SearchBar({ placeholder, data }) {\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [wordEntered, setWordEntered] = useState(\"\");\r\n\r\n  const HandleFilter = async (event) => {\r\n    const searchWord = event.target.value;\r\n    setWordEntered(searchWord);\r\n    console.log(searchWord);\r\n\r\n    const newFilter = await findByName(searchWord);\r\n    setFilteredData(newFilter.data);\r\n      // Promise.resolve(\r\n      //     findByName(searchWord).then((res)=>res.data).then(\r\n      //         (i)=>{\r\n      //             console.log(i)\r\n      //             console.log(\"hiii\")\r\n      //             setFilteredData(i.data)\r\n      //         }\r\n      //     )\r\n      // )\r\n      \r\n\r\n    if (searchWord === \"\") {\r\n      setFilteredData([]);\r\n    } else {\r\n      setFilteredData(filteredData);\r\n    }\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setFilteredData([]);\r\n    setWordEntered(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"searchInputs\">\r\n        <input\r\n          type=\"text\" className=\"colorchange\"\r\n          value={wordEntered}\r\n          onChange={HandleFilter}\r\n        />\r\n        <div className=\"searchIcon\">\r\n          {filteredData.length === 0 ? (\r\n            <SearchIcon />\r\n          ) : (\r\n            <CloseIcon id=\"clearBtn\" onClick={clearInput} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {filteredData.length != 0 && (\r\n        <div className=\"dataResult\">\r\n          {filteredData.slice(0, 15).map((value, key) => {\r\n            return (\r\n              /*<a className=\"dataItem\" href={value.link} target=\"_blank\">\r\n                <p>{value.Full_name} </p>\r\n              </a>*/\r\n              <Link className=\"dataItem\" to={{\r\n                pathname: \"/Products\",\r\n                state: { product:value },\r\n              }}>{value.Full_name}</Link>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}